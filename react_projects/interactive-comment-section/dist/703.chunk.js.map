{"version":3,"file":"703.chunk.js","mappings":"kKA8BA,QAnB4CA,EAAAA,YACxC,WAAgDC,GAAQ,IAArDC,EAAM,EAANA,OAAQC,EAAI,EAAJA,KAAI,IAAEC,WAAAA,OAAU,IAAG,GAAI,EAAKC,E,kXAAK,MACxC,OACI,4BACIJ,IAAKA,EAELK,UAAS,UChBM,uBDgBqB,aAC/BF,GCjB0D,wBDmB/DG,YAAa,mBACbC,KAAMN,EACNC,KAAMA,EACNM,WAAW,SACVJ,EAAMK,SAGnB,I,uCELJ,QAZgCV,EAAAA,YAC5B,YAAiC,IAA9BC,EAAG,EAAHA,IAAKU,EAAE,EAAFA,GAAIC,EAAI,EAAJA,KAASP,E,kXAAK,MACtB,OACI,0BACUJ,IAAAA,EAAKU,GAAAA,EAAIC,KAAAA,EACfN,UCd8C,wBDe7CD,EAAMK,SAGnB,IEoCJ,EAtCoC,SAAH,GAS3B,IARFC,EAAE,EAAFA,GACAT,EAAM,EAANA,OACAW,EAAS,EAATA,UACAC,EAAW,EAAXA,YACAC,EAAS,EAATA,UACAC,EAAa,EAAbA,cACAC,EAAW,EAAXA,YACAC,EAAM,EAANA,OAMA,OAJAC,EAAAA,EAAAA,YAAU,WACNF,SAAAA,EAAaG,QAAQC,OACzB,GAAG,IAGC,wBACIV,GAAIT,EACJI,UCjCqD,uBDkCrDgB,SAAU,SAACC,GACPA,EAAEC,iBACFD,EAAEE,kBACFP,EAAQP,EACZ,GACA,gBAACe,EAAA,EAAc,CACXC,IAAKd,EACLe,IAAK,MACLC,SAAU,WAEd,gBAAC,EAAY,CAAC5B,IAAKgB,GAAcD,GAAiB,IAClD,gBAAC,EAAM,CACHf,IAAKc,EACLH,KAAK,UACJE,GAIjB,C","sources":["webpack:///./src/components/CommentInput/CommentInput.tsx","webpack:///./src/components/CommentInput/CommentInput.module.scss?d473","webpack:///./src/components/UI/Button/Button.tsx","webpack:///./src/components/UI/Button/Button.module.scss?61b8","webpack:///./src/components/PostForm/PostForm.tsx","webpack:///./src/components/PostForm/PostForm.module.scss?d8ba"],"sourcesContent":["import React, { FC } from \"react\"\r\nimport styles from \"./CommentInput.module.scss\"\r\n\r\ninterface CommentInputProps {\r\n    ref?: HTMLTextAreaElement\r\n    formId?: string\r\n    name?: string\r\n    children?: React.ReactNode\r\n    isEditable?: boolean\r\n}\r\n\r\nconst CommentInput: FC<CommentInputProps> = React.forwardRef(\r\n    ({ formId, name, isEditable = true, ...props }, ref) => {\r\n        return (\r\n            <textarea\r\n                ref={ref}\r\n                // disabled={!isEditable}\r\n                className={`${styles[\"comment-area\"]} ${\r\n                    !isEditable && styles[\"comment-area--disabled\"]\r\n                }`}\r\n                placeholder={\"Add a comment...\"}\r\n                form={formId}\r\n                name={name}\r\n                spellCheck=\"false\">\r\n                {props.children}\r\n            </textarea>\r\n        )\r\n    }\r\n)\r\n\r\nexport default CommentInput\r\n","// extracted by mini-css-extract-plugin\nexport default {\"comment-area\":\"_HWjqUeDKoKx0tkZI_JN\",\"comment-area--disabled\":\"brn4uczzrOo7KiEFRwya\"};","import React, { FC } from \"react\"\r\nimport styles from \"./Button.module.scss\"\r\n\r\ninterface ButtonProps {\r\n    ref?: any\r\n    id?: string\r\n    type?: \"button\" | \"submit\" | \"reset\" | undefined\r\n    children?: React.ReactNode\r\n}\r\n\r\nconst Button: FC<ButtonProps> = React.forwardRef(\r\n    ({ ref, id, type, ...props }) => {\r\n        return (\r\n            <button\r\n                {...{ ref, id, type }}\r\n                className={styles[\"button\"]}>\r\n                {props.children}\r\n            </button>\r\n        )\r\n    }\r\n)\r\n\r\nexport default Button\r\n","// extracted by mini-css-extract-plugin\nexport default {\"content-box\":\"BG20cIMtJEcPU521S1d9\",\"button\":\"WTsBDLCOKo9YUGHVtMxw\"};","import React, { FC, useEffect } from \"react\"\r\nimport CommentInput from \"../CommentInput/CommentInput\"\r\nimport ContainedImage from \"../ContainedImage/ContainedImage\"\r\nimport Button from \"../UI/Button/Button\"\r\nimport styles from \"./PostForm.module.scss\"\r\nimport { Action } from \"../../models/ActionTypes\"\r\n\r\nexport interface PostFormProps extends Action {\r\n    id?: number\r\n    formId?: string\r\n    avatarUrl: string\r\n    buttonValue?: string\r\n    buttonRef?: any\r\n    textAreaValue?: string\r\n    textAreaRef?: any\r\n}\r\n\r\nconst PostForm: FC<PostFormProps> = ({\r\n    id,\r\n    formId,\r\n    avatarUrl,\r\n    buttonValue,\r\n    buttonRef,\r\n    textAreaValue,\r\n    textAreaRef,\r\n    action,\r\n}) => {\r\n    useEffect(() => {\r\n        textAreaRef?.current.focus()\r\n    }, [])\r\n\r\n    return (\r\n        <form\r\n            id={formId}\r\n            className={styles[\"post-form\"]}\r\n            onSubmit={(e) => {\r\n                e.preventDefault()\r\n                e.stopPropagation()\r\n                action!(id)\r\n            }}>\r\n            <ContainedImage\r\n                src={avatarUrl}\r\n                alt={\"You\"}\r\n                maxWidth={\"2.5rem\"}\r\n            />\r\n            <CommentInput ref={textAreaRef}>{textAreaValue || \"\"}</CommentInput>\r\n            <Button\r\n                ref={buttonRef}\r\n                type=\"submit\">\r\n                {buttonValue}\r\n            </Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PostForm\r\n","// extracted by mini-css-extract-plugin\nexport default {\"content-box\":\"P_8e_89n6wyuur9huDJU\",\"post-form\":\"Sk7HApTULkdTBf7PTMg5\"};"],"names":["React","ref","formId","name","isEditable","props","className","placeholder","form","spellCheck","children","id","type","avatarUrl","buttonValue","buttonRef","textAreaValue","textAreaRef","action","useEffect","current","focus","onSubmit","e","preventDefault","stopPropagation","ContainedImage","src","alt","maxWidth"],"sourceRoot":""}