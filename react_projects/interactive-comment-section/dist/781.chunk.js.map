{"version":3,"file":"781.chunk.js","mappings":"iQAkGA,QAxF0C,SAAH,GAAuB,I,IAAjBA,EAAU,EAAVA,WAC7BC,GAAqBC,EAAAA,EAAAA,YAAWC,EAAAA,GAApCC,GACAC,GAAuBH,EAAAA,EAAAA,YAAWI,EAAAA,GAAlCD,mBAKN,G,GAFwBE,EAAAA,EAAAA,UAA2B,CACjDP,WAAAA,I,EACF,E,8zBAFKQ,EAAK,KAAEC,EAAQ,KAOhBC,GAAcC,EAAAA,EAAAA,cAAY,WAC5B,IAAMC,EAAkBP,EAAmBQ,IAAIZ,GAC/CQ,GAAS,SAACD,GAUN,OATAH,EAAmBS,IACfb,OACoBc,IAApBH,EACM,SAEAG,GAIH,CACHf,gBACwBe,IAApBH,EACMJ,EAAMR,WAAa,EACC,MAApBY,EACAJ,EAAMR,WAAa,EACnBQ,EAAMR,WAAa,EAErC,GACJ,GAAG,CAACK,EAAoBJ,IAClBe,GAAiBL,EAAAA,EAAAA,cAAY,WAC/B,IAAMC,EAAkBP,EAAmBQ,IAAIZ,GAC/CQ,GAAS,SAACD,GAUN,OATAH,EAAmBS,IACfb,OACoBc,IAApBH,EACM,SAEAG,GAIH,CACHf,gBACwBe,IAApBH,EACMJ,EAAMR,WAAa,EACC,MAApBY,EACAJ,EAAMR,WAAa,EACnBQ,EAAMR,WAAa,EAErC,GACJ,GAAG,CAACK,IAEJ,OACI,uBAAKY,UCnEkB,wBDoEnB,0BAAQC,QAASR,GACb,gBAAC,EAAAS,cAAa,CACVC,IAAKC,EAAQ,KACbC,IAAI,OAIZ,uBACIL,UAAS,UC5EmD,uBD4EjB,YACvCZ,EAAmBQ,IAAIZ,KACuB,MAA7CI,EAAmBQ,IAAIZ,GC9EkM,uBAAvD,wBDgFxH,MAE9CO,EAAMR,WAAWuB,WAAWC,OA/DnB,EAgEJ,MACAhB,EAAMR,YAGhB,0BAAQkB,QAASF,GACb,gBAAC,EAAAG,cAAa,CACVC,IAAKC,EAAQ,KACbC,IAAI,OAKxB,C","sources":["webpack:///./src/components/LikeSection/LikeSection.tsx","webpack:///./src/components/LikeSection/LikeSection.module.scss?e096"],"sourcesContent":["import React, { FC, useCallback, useContext, useState } from \"react\"\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\"\r\nimport { CommentContext } from \"../../context/CommentContext\"\r\nimport { UserContext } from \"../../context/UserContext\"\r\nimport styles from \"./LikeSection.module.scss\"\r\n\r\nexport interface LikeSectionProps {\r\n    likesCount: number\r\n}\r\n\r\nconst LikeSection: FC<LikeSectionProps> = ({ likesCount }) => {\r\n    const { id: currentCommentId } = useContext(CommentContext)\r\n    const { reactedCommentsIds } = useContext(UserContext)\r\n\r\n    //const initialLikesCount = useRef(likesCount)\r\n    const [score, setScore] = useState<LikeSectionProps>({\r\n        likesCount\r\n    })\r\n    //const [reaction, setReaction] = useState<Reaction>(undefined)\r\n\r\n    const maxLikesScore = 2\r\n\r\n    const likeComment = useCallback(() => {\r\n        const currentReaction = reactedCommentsIds.get(currentCommentId)\r\n        setScore((score) => {\r\n            reactedCommentsIds.set(\r\n                currentCommentId,\r\n                currentReaction === undefined\r\n                    ? \"+\"\r\n                    : currentReaction === \"+\"\r\n                    ? undefined\r\n                    : undefined\r\n            )\r\n\r\n            return {\r\n                likesCount:\r\n                    currentReaction === undefined\r\n                        ? score.likesCount + 1\r\n                        : currentReaction === \"+\"\r\n                        ? score.likesCount - 1\r\n                        : score.likesCount + 1\r\n            }\r\n        })\r\n    }, [reactedCommentsIds, currentCommentId])\r\n    const dislikeComment = useCallback(() => {\r\n        const currentReaction = reactedCommentsIds.get(currentCommentId)\r\n        setScore((score) => {\r\n            reactedCommentsIds.set(\r\n                currentCommentId,\r\n                currentReaction === undefined\r\n                    ? \"-\"\r\n                    : currentReaction === \"-\"\r\n                    ? undefined\r\n                    : undefined\r\n            )\r\n\r\n            return {\r\n                likesCount:\r\n                    currentReaction === undefined\r\n                        ? score.likesCount - 1\r\n                        : currentReaction === \"-\"\r\n                        ? score.likesCount + 1\r\n                        : score.likesCount - 1\r\n            }\r\n        })\r\n    }, [reactedCommentsIds])\r\n\r\n    return (\r\n        <div className={styles[\"like-section\"]}>\r\n            <figure onClick={likeComment}>\r\n                <LazyLoadImage\r\n                    src={require(\"../../images/icon-plus.svg\")}\r\n                    alt=\"+\"\r\n                />\r\n            </figure>\r\n\r\n            <div\r\n                className={`${styles[\"like-section__score\"]} ${\r\n                    reactedCommentsIds.get(currentCommentId) &&\r\n                    (reactedCommentsIds.get(currentCommentId) === \"-\"\r\n                        ? styles[\"like-section__score--disliked\"]\r\n                        : styles[\"like-section__score--liked\"])\r\n                } `}>\r\n                {score.likesCount.toString().length > maxLikesScore\r\n                    ? \"99+\"\r\n                    : score.likesCount}\r\n            </div>\r\n\r\n            <figure onClick={dislikeComment}>\r\n                <LazyLoadImage\r\n                    src={require(\"../../images/icon-minus.svg\")}\r\n                    alt=\"-\"\r\n                />\r\n            </figure>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LikeSection\r\n","// extracted by mini-css-extract-plugin\nexport default {\"like-section\":\"z7ybTCJIZkWph0UyvTeF\",\"like-section__score\":\"VqGlM5QfSL5rqSpKYgPb\",\"like-section__score--featured\":\"v2uIKH8dgpDHVhakmSit\",\"like-section__score--liked\":\"Mo8U3ssgKRJBfJfx8qTO\",\"like-section__score--disliked\":\"xPlH5rNFwQ8zLjmo3D97\"};"],"names":["likesCount","currentCommentId","useContext","CommentContext","id","reactedCommentsIds","UserContext","useState","score","setScore","likeComment","useCallback","currentReaction","get","set","undefined","dislikeComment","className","onClick","LazyLoadImage","src","require","alt","toString","length"],"sourceRoot":""}