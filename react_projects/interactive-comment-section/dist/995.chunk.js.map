{"version":3,"file":"995.chunk.js","mappings":"qLAkCA,SAxBqBA,EAAAA,EAAAA,aACjB,YAAgE,IAA7DC,EAAM,EAANA,OAAQC,EAAI,EAAJA,KAAMC,EAAW,EAAXA,YAAgBC,E,kXAAK,MAQlC,OAPAC,EAAAA,EAAAA,YAAU,WAAM,MACZF,SAAoB,QAAT,EAAXA,EAAaG,eAAO,OAApB,EAAsBC,eAAe,CACjCC,MAAO,SACPC,OAAQ,UAEhB,GAAG,IAGC,4BACIC,IAAKP,EAELQ,UAAU,eACVC,YAAa,mBACbC,KAAMZ,EACNC,KAAMA,EACNY,WAAW,SACVV,EAAMW,SAGnB,I,aCwCJ,SAlDiBf,EAAAA,EAAAA,aACb,YACM,EAAFgB,GAUiB,IATjBf,EAAM,EAANA,OAEAgB,EAAW,EAAXA,YACAC,EAAS,EAATA,UAEAC,EAAa,EAAbA,cACAhB,EAAW,EAAXA,YAEAiB,EAAY,EAAZA,cAEAf,EAAAA,EAAAA,YAAU,WAAM,MACZF,SAAoB,QAAT,EAAXA,EAAaG,eAAO,OAApB,EAAsBe,OAC1B,GAAG,IAEH,IAAQC,GAAcC,EAAAA,EAAAA,YAAWC,EAAAA,GAAzBF,UAER,OACI,wBACIN,GAAIf,EACJU,UC1C4H,uBD2C5Hc,SAAU,SAACC,GACPA,EAAEC,iBACFD,EAAEE,kBACFR,GACJ,GACA,gBAAC,EAAAS,cAAa,CACVC,IAAKR,EACLS,IAAI,MACJC,MAAO,CAAEC,SAAU,UAEvB,gBAAC,EAAY,CACT9B,YACIA,GAEHgB,GAAiB,IAEtB,gBAACe,EAAA,EAAM,CACHhB,UACIA,EAEJD,YAAaA,IAI7B,G","sources":["webpack:///./src/components/CommentInput/CommentInput.tsx","webpack:///./src/components/PostForm/PostForm.tsx","webpack:///./src/components/PostForm/PostForm.module.scss?d8ba"],"sourcesContent":["import React, { forwardRef, useEffect } from \"react\"\r\n\r\n\r\ninterface CommentInputProps {\r\n    textAreaRef?: React.MutableRefObject<HTMLTextAreaElement>\r\n    formId?: string\r\n    name?: string\r\n    children?: React.ReactNode\r\n}\r\n\r\nconst CommentInput = forwardRef(\r\n    ({ formId, name, textAreaRef, ...props }: CommentInputProps) => {\r\n        useEffect(() => {\r\n            textAreaRef?.current?.scrollIntoView({\r\n                block: \"center\",\r\n                inline: \"center\",\r\n            })\r\n        }, [])\r\n\r\n        return (\r\n            <textarea\r\n                ref={textAreaRef}\r\n                // disabled={!isEditable}\r\n                className=\"comment-area\"\r\n                placeholder={\"Add a comment...\"}\r\n                form={formId}\r\n                name={name}\r\n                spellCheck=\"false\">\r\n                {props.children}\r\n            </textarea>\r\n        )\r\n    }\r\n)\r\n\r\nexport default CommentInput\r\n","import React, { FC, forwardRef, useContext, useEffect } from \"react\"\r\n\r\nimport styles from \"./PostForm.module.scss\"\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\"\r\nimport { UserContext } from \"../../context/UserContext\"\r\nimport CommentInput from \"../CommentInput/CommentInput\"\r\nimport Button from \"../UI/Button/Button\"\r\n\r\nexport interface PostFormProps {\r\n    id?: number\r\n    formId?: string\r\n\r\n    buttonValue: string\r\n    buttonRef?: React.MutableRefObject<HTMLButtonElement>\r\n\r\n    textAreaValue?: string\r\n    textAreaRef?: React.MutableRefObject<HTMLTextAreaElement>\r\n\r\n    onFormSubmit: Function\r\n}\r\n\r\nconst PostForm = forwardRef(\r\n    ({\r\n        id,\r\n        formId,\r\n\r\n        buttonValue,\r\n        buttonRef,\r\n\r\n        textAreaValue,\r\n        textAreaRef,\r\n\r\n        onFormSubmit,\r\n    }: PostFormProps) => {\r\n        useEffect(() => {\r\n            textAreaRef?.current?.focus()\r\n        }, [])\r\n\r\n        const { avatarUrl } = useContext(UserContext)\r\n\r\n        return (\r\n            <form\r\n                id={formId}\r\n                className={styles[\"post-form\"]}\r\n                onSubmit={(e) => {\r\n                    e.preventDefault()\r\n                    e.stopPropagation()\r\n                    onFormSubmit()\r\n                }}>\r\n                <LazyLoadImage\r\n                    src={avatarUrl}\r\n                    alt=\"You\"\r\n                    style={{ maxWidth: \"3rem\" }}\r\n                />\r\n                <CommentInput\r\n                    textAreaRef={\r\n                        textAreaRef as React.MutableRefObject<HTMLTextAreaElement>\r\n                    }>\r\n                    {textAreaValue || \"\"}\r\n                </CommentInput>\r\n                <Button\r\n                    buttonRef={\r\n                        buttonRef as React.MutableRefObject<HTMLButtonElement>\r\n                    }\r\n                    buttonValue={buttonValue}\r\n                />\r\n            </form>\r\n        )\r\n    }\r\n)\r\n\r\nexport default PostForm\r\n","// extracted by mini-css-extract-plugin\nexport default {\"content-box\":\"P_8e_89n6wyuur9huDJU\",\"comment\":\"yj6hEaFK28SRhvlMkppn\",\"comment__content\":\"QONRBsdJ04UMqyyX51KM\",\"post-form\":\"Sk7HApTULkdTBf7PTMg5\",\"comment__body\":\"_wXehmqQaZfSm6eH0btF\"};"],"names":["forwardRef","formId","name","textAreaRef","props","useEffect","current","scrollIntoView","block","inline","ref","className","placeholder","form","spellCheck","children","id","buttonValue","buttonRef","textAreaValue","onFormSubmit","focus","avatarUrl","useContext","UserContext","onSubmit","e","preventDefault","stopPropagation","LazyLoadImage","src","alt","style","maxWidth","Button"],"sourceRoot":""}