{"version":3,"file":"86.chunk.js","mappings":";6IAIA,QAJA,SAAiCA,GAC7B,MAAO,sCAAP,OAA6CA,EAA7C,eACH,oRCDD,8hGAAAC,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4qBAkDA,QA3CsB,SAAC,GAA6C,QAA3CD,EAA2C,EAA3CA,YACrB,MAAsCE,EAAAA,EAAAA,UAAiB,MAAvD,g0BAAOC,EAAP,KAAoBC,EAApB,KACMC,GAAYC,EAAAA,EAAAA,UAAQ,WACtB,MAAuB,KAAhBH,CACV,GAAE,CAACA,IACEI,GAAWC,EAAAA,EAAAA,MAL+C,kCAOhE,+FACUC,EAAUC,EAAwBV,GAD5C,SAG2BW,EAAAA,GAAAA,IAAkBF,GAH7C,gBAGYG,EAHZ,EAGYA,KAERR,EAAeQ,EAAI,MALvB,4CAPgE,sBAmBhE,OAJAC,EAAAA,EAAAA,YAAU,YAfsD,mCAgB5DC,EACH,GAAE,IAEIT,EACH,gBAACU,EAAA,EAAD,MAEA,wBACIC,UAAS,oBAAeC,EAAAA,EAAAA,uBACxBC,QAAS,WACLX,EAAS,IAAD,QAAKY,EAAAA,EAAAA,GAAShB,EAAYiB,gBACrC,GACAjB,EAcZ","sources":["webpack:///./src/helpers/functions/constructCountryNameUrl.ts","webpack:///./src/pages/CountryDetails/Details/BorderCountry.tsx"],"sourcesContent":["function constructCountryNameUrl(countryCode) {\r\n    return `https://restcountries.com/v2/alpha/${countryCode}?fields=name`\r\n}\r\n\r\nexport default constructCountryNameUrl\r\n","import axios from \"axios\"\r\nimport React, { useEffect, useMemo, useState } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport constructCountryNameUrl from \"../../../helpers/functions/constructCountryNameUrl\"\r\nimport strToUrl from \"../../../helpers/functions/strToUrl\"\r\nimport styles from \"../CountryDetails.module.scss\"\r\nimport LoadingBorder from \"./LoadingBorder\"\r\n\r\nconst BorderCountry = ({ countryCode }: { countryCode: string }) => {\r\n    const [countryName, setCountryName] = useState<string>(\"\")\r\n    const isLoading = useMemo(() => {\r\n        return countryName === \"\"\r\n    }, [countryName])\r\n    const navigate = useNavigate()\r\n\r\n    async function fetchCountryName() {\r\n        const nameUrl = constructCountryNameUrl(countryCode)\r\n\r\n        const { data } = await axios.get<Object>(nameUrl)\r\n\r\n        setCountryName(data[\"name\"])\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchCountryName()\r\n    }, [])\r\n\r\n    return isLoading ? (\r\n        <LoadingBorder />\r\n    ) : (\r\n        <span\r\n            className={`shadow-sm ${styles[\"details__footer__item\"]}`}\r\n            onClick={() => {\r\n                navigate(`/${strToUrl(countryName.toLowerCase())}`)\r\n            }}>\r\n            {countryName}\r\n        </span>\r\n    )\r\n    // return (\r\n    //     <span\r\n    //         className={`shadow-sm ${styles[\"details__footer__item\"]} ${\r\n    //             isLoading ? styles[\"gradient\"] : \"\"\r\n    //         }`}\r\n    //         onClick={() => {\r\n    //             navigate(`/${strToUrl(countryName.toLowerCase())}`)\r\n    //         }}>\r\n    //         {countryName}\r\n    //     </span>\r\n    // )\r\n}\r\n\r\nexport default BorderCountry\r\n"],"names":["countryCode","i","useState","countryName","setCountryName","isLoading","useMemo","navigate","useNavigate","nameUrl","constructCountryNameUrl","axios","data","useEffect","fetchCountryName","LoadingBorder","className","styles","onClick","strToUrl","toLowerCase"],"sourceRoot":""}