{"version":3,"file":"924.bundle.js","mappings":"kJAGMA,EAAcC,EAAAA,MAAW,kBAAM,6BAAN,IA4C/B,QAvCsB,SAAC,GAAkB,IAAhBC,EAAgB,EAAhBA,UACfC,EAAe,IAAIC,sBACrB,SAACC,GACGA,EAAQC,SAAQ,SAACC,GACbA,EAAMC,OAAOC,UAAUC,OACnBC,EAAAA,EAAAA,OACAJ,EAAMK,eAEb,GACJ,GACD,CACIC,UAAW,KAInB,OACI,gBAACC,EAAA,EAAD,CACIC,OAAK,EACLC,UAAW,oCACVd,EAAUe,KAAI,gBC3BYC,ED2BTC,EAAH,EAAGA,KAAMC,EAAT,EAASA,WAAYC,EAArB,EAAqBA,QAASC,EAA9B,EAA8BA,OAAQC,EAAtC,EAAsCA,KAAtC,OACX,gBAAC,EAAAC,SAAD,KACI,gBAACxB,EAAD,CACIyB,IAAKN,EACLA,KAAMA,EACNC,YChCeF,EDgCYE,ECvB/C,SAA4BM,GAExB,IADA,IAAMC,EAAsB,GACnBC,EAAI,KAAH,IAAG,GAAM,GAAGF,EAAIE,GAAK,EAAGF,EAAKA,EAAIE,EAAK,EAAG,CAC/C,IAAMC,GAAYH,EAAIE,GAAGE,WACzBH,EAAUI,QAAQF,EAAW,IAAIG,OAAO,EAAIH,EAASI,QACxD,CAGD,OAFAN,EAAUI,QAAQL,EAAEI,YAEbH,CACV,CAXMO,CAAmBhB,GAAQiB,KAAK,MD0BnBb,OAAQA,EACRD,QAASA,EACTe,QAASb,EAAKc,QACV,yBACA,2BAEJlC,aAAcA,IAZX,IAkB1B,C,kCE5CD,SAAgB,KAAO,uBAAuB,OAAS,uBAAuB,OAAS,uBAAuB,UAAY,uBAAuB,MAAQ,uB","sources":["webpack:///./src/components/CountriesGrid/CountriesGrid.tsx","webpack:///./src/helpers/separateNumber.ts","webpack:///./src/components/CountryCard/CountryCard.module.scss?2ed1"],"sourcesContent":["import React, { Suspense } from \"react\"\r\nimport { Container } from \"react-bootstrap\"\r\n// import CountryCard from \"../CountryCard/CountryCard\"\r\nconst CountryCard = React.lazy(() => import(\"../CountryCard/CountryCard\"))\r\n// import ICountryCard from \"../CountryCard/ICountryCard\"\r\nimport separateNumber from \"../../helpers/separateNumber\"\r\nimport cardStyles from \"../CountryCard/CountryCard.module.scss\"\r\n\r\nconst CountriesGrid = ({ countries }) => {\r\n    const cardObserver = new IntersectionObserver(\r\n        (entries) => {\r\n            entries.forEach((entry) => {\r\n                entry.target.classList.toggle(\r\n                    cardStyles[\"active\"],\r\n                    entry.isIntersecting\r\n                )\r\n            })\r\n        },\r\n        {\r\n            threshold: 0.5,\r\n        }\r\n    )\r\n\r\n    return (\r\n        <Container\r\n            fluid\r\n            className={\"px-3 px-md-5 py-3 countries-grid\"}>\r\n            {countries.map(({ name, population, capital, region, flag }) => (\r\n                <Suspense>\r\n                    <CountryCard\r\n                        key={name}\r\n                        name={name}\r\n                        population={separateNumber(population)}\r\n                        region={region}\r\n                        capital={capital}\r\n                        flagUrl={flag.replace(\r\n                            /flagcdn.com\\/(\\w+).svg/,\r\n                            \"flagcdn.com/w320/$1.jpg\"\r\n                        )}\r\n                        cardObserver={cardObserver}\r\n                    />\r\n                </Suspense>\r\n            ))}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CountriesGrid\r\n","export default function separateNumber(number: number): string {\r\n    //81770900 ==> 81,770,900\r\n    //206135893 ==> 206,135,893\r\n\r\n    //44700000 ==> 44,700,000\r\n    //28875 ==> 28,875\r\n\r\n    return splitNumberByRanks(number).join(\",\")\r\n\r\n    function splitNumberByRanks(n: number): string[] {\r\n        const numPieces: string[] = []\r\n        for (let i = 10 ** 3; n / i >= 1; n = (n / i) | 0) {\r\n            const numPiece = (n % i).toString()\r\n            numPieces.unshift(numPiece + \"0\".repeat(3 - numPiece.length))\r\n        }\r\n        numPieces.unshift(n.toString())\r\n\r\n        return numPieces\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"_mIESs6x4bmN8T_bV24N\",\"active\":\"x2UMtOkO5Z23cyJYWIhY\",\"header\":\"jKPa9VCwA1LTwiv_RAei\",\"attribute\":\"pZXbB86KrhhRNHmg5gCp\",\"value\":\"zl8IYhRRl09_JwgB7lg7\"};"],"names":["CountryCard","React","countries","cardObserver","IntersectionObserver","entries","forEach","entry","target","classList","toggle","cardStyles","isIntersecting","threshold","Container","fluid","className","map","number","name","population","capital","region","flag","Suspense","key","n","numPieces","i","numPiece","toString","unshift","repeat","length","splitNumberByRanks","join","flagUrl","replace"],"sourceRoot":""}