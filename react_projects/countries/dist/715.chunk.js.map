{"version":3,"file":"715.chunk.js","mappings":"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","sources":["webpack:///./src/components/CountryCard/CountryFeature.tsx","webpack:///./src/helpers/functions/capitalizeFirstLetter.ts","webpack:///./src/helpers/functions/strToUrl.ts","webpack:///./src/pages/CountryDetails/CountryDetails.module.scss?79f6","webpack:///./src/helpers/functions/constructCountryNameUrl.ts","webpack:///./src/pages/CountryDetails/Details/LoadingBorder.tsx","webpack:///./src/pages/CountryDetails/Details/BorderCountry.tsx","webpack:///./src/pages/CountryDetails/Details/Details.tsx","webpack:///./src/helpers/functions/camelCaseToNormal.ts","webpack:///./src/components/CountryCard/CountryCard.module.scss?2ed1"],"sourcesContent":["import React, { FC } from \"react\"\r\nimport styles from \"./CountryCard.module.scss\"\r\nimport capitalizeFirstLetter from \"../../helpers/functions/capitalizeFirstLetter\"\r\n\r\nconst CountryFeature = ({ feature, ...props }: { feature: string }) => {\r\n    return (\r\n        <div>\r\n            <span className={styles.attribute}>\r\n                {capitalizeFirstLetter(feature)}:\r\n            </span>\r\n            <span> {props.children || \"None\"}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryFeature\r\n","export default function capitalizeFirstLetter(str: string): string {\r\n    return str[0].toUpperCase() + str.slice(1)\r\n}\r\n","function strToUrl(str: string): string {\r\n    return str.split(/\\s/).join(\"-\")\r\n}\r\n\r\nexport default strToUrl\r\n","// extracted by mini-css-extract-plugin\nexport default {\"details\":\"l1hkjxGozYpPDOquZTu5\",\"details__header\":\"uHWZx0_N68PlhyFyniTJ\",\"details__body\":\"J1AaLm9UupSYsBVQMKFe\",\"details__body__header\":\"ut1kaPqA25XpqnGpNx2C\",\"details__body__content\":\"Kilpl5U1iXXsRapH_o2I\",\"details__footer\":\"KMNecxmu210OftvbPF7z\",\"details__footer__title\":\"ea5ixzkMI1eTkMC92VBb\",\"details__footer__item\":\"IkDrnysIoUoJLT1gYhBV\",\"gradient\":\"bpil0zatx32ix2qOoL4O\",\"placeHolderShimmer\":\"YIGpzAVkefKduWEt2yxM\"};","function constructCountryNameUrl(countryCode) {\r\n    return `https://restcountries.com/v2/alpha/${countryCode}?fields=name`\r\n}\r\n\r\nexport default constructCountryNameUrl\r\n","import React from \"react\"\r\nimport styles from \"../CountryDetails.module.scss\"\r\n\r\nconst LoadingBorder = () => {\r\n    return (\r\n        <span\r\n            className={`shadow-sm ${styles[\"details__footer__item\"]} \r\n            ${styles[\"gradient\"]}`}>\r\n            Lorem ipsum\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default LoadingBorder\r\n","import axios from \"axios\"\r\nimport React, { useEffect, useMemo, useState } from \"react\"\r\nimport { useNavigate } from \"react-router\"\r\nimport constructCountryNameUrl from \"../../../helpers/functions/constructCountryNameUrl\"\r\nimport strToUrl from \"../../../helpers/functions/strToUrl\"\r\nimport styles from \"../CountryDetails.module.scss\"\r\nimport LoadingBorder from \"./LoadingBorder\"\r\n\r\nconst BorderCountry = ({ countryCode }: { countryCode: string }) => {\r\n    const [countryName, setCountryName] = useState<string>(\"\")\r\n    const isLoading = useMemo(() => {\r\n        return countryName === \"\"\r\n    }, [countryName])\r\n    const navigate = useNavigate()\r\n\r\n    async function fetchCountryName() {\r\n        const nameUrl = constructCountryNameUrl(countryCode)\r\n\r\n        const { data } = await axios.get<Object>(nameUrl)\r\n\r\n        setCountryName(data[\"name\"])\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchCountryName()\r\n    }, [])\r\n\r\n    return isLoading ? (\r\n        <LoadingBorder />\r\n    ) : (\r\n        <span\r\n            className={`shadow-sm ${styles[\"details__footer__item\"]}`}\r\n            onClick={() => {\r\n                navigate(`/${strToUrl(countryName.toLowerCase())}`)\r\n            }}>\r\n            {countryName}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default BorderCountry\r\n","import React from \"react\"\r\nimport CountryFeature from \"../../../components/CountryCard/CountryFeature\"\r\nimport styles from \"../CountryDetails.module.scss\"\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\"\r\nimport ICookedDetails from \"../CookCountries/ICookedCountries\"\r\nimport camelCaseToNormal from \"../../../helpers/functions/camelCaseToNormal\"\r\nimport BorderCountry from \"./BorderCountry\"\r\n\r\nconst Details = ({ cookedDetails }: { cookedDetails: ICookedDetails }) => {\r\n    const { flag, name, borders, ...other } = cookedDetails\r\n\r\n    return (\r\n        <div\r\n            className={`d-flex flex-column flex-sm-row align-items-center ${styles[\"details\"]}`}>\r\n            <div className={styles[\"details__header\"]}>\r\n                <LazyLoadImage\r\n                    src={flag}\r\n                    alt=\"Country flag\"\r\n                    className={`shadow-lg ${styles[\"details__header__img\"]}`}\r\n                />\r\n            </div>\r\n            <div\r\n                className={`d-flex flex-column justify-content-between ${styles[\"details__body\"]}`}>\r\n                <header className={styles[\"details__body__header\"]}>\r\n                    {name}\r\n                </header>\r\n                <article className={`${styles[\"details__body__content\"]}`}>\r\n                    {Object.keys(other)\r\n                        .sort()\r\n                        .map((prop: string) => (\r\n                            <CountryFeature\r\n                                key={prop}\r\n                                feature={camelCaseToNormal(prop)}>\r\n                                {other[prop]}\r\n                            </CountryFeature>\r\n                        ))}\r\n                </article>\r\n                <footer\r\n                    className={`d-flex flex-wrap align-items-center gap-2\r\n                    ${styles[\"details__footer\"]}`}>\r\n                    <span className={`${styles[\"details__footer__title\"]}`}>\r\n                        Border Countries:&nbsp;\r\n                    </span>\r\n                    {borders?.map((border) => (\r\n                        <BorderCountry\r\n                            key={border}\r\n                            countryCode={border}\r\n                        />\r\n                    )) || \"None\"}\r\n                </footer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Details\r\n","function camelCaseToNormal(camelCaseStr: string): string {\r\n    return camelCaseStr.replace(/([a-z])([A-Z])/g, \"$1 $2\")\r\n}\r\n\r\nexport default camelCaseToNormal\r\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"_mIESs6x4bmN8T_bV24N\",\"active\":\"x2UMtOkO5Z23cyJYWIhY\",\"img\":\"X6y3R94hsNQ6Sd9Jj75w\",\"header\":\"jKPa9VCwA1LTwiv_RAei\",\"attribute\":\"pZXbB86KrhhRNHmg5gCp\",\"value\":\"zl8IYhRRl09_JwgB7lg7\"};"],"names":["feature","props","className","styles","capitalizeFirstLetter","children","str","toUpperCase","slice","split","join","countryCode","i","useState","countryName","setCountryName","isLoading","useMemo","navigate","useNavigate","nameUrl","constructCountryNameUrl","axios","data","useEffect","fetchCountryName","onClick","strToUrl","toLowerCase","cookedDetails","flag","name","borders","other","LazyLoadImage","src","alt","Object","keys","sort","map","prop","CountryFeature","key","camelCaseStr","replace","border"],"sourceRoot":""}