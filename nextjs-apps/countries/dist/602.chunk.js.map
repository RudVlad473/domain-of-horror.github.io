{"version":3,"file":"602.chunk.js","mappings":"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","sources":["webpack:///./src/components/CountryCard/CountryFeature/CountryFeature.tsx","webpack:///./src/helpers/functions/capitalizeFirstLetter.ts","webpack:///./src/helpers/functions/separateNumber.ts","webpack:///./src/helpers/functions/strToUrl.ts","webpack:///./src/helpers/functions/camelCaseToNormal.ts","webpack:///./src/helpers/functions/constructCountryDetailsUrl.ts","webpack:///./src/helpers/functions/getNthWord.ts","webpack:///./src/pages/CountryDetails/CookCountries/cookCountryDetails.ts","webpack:///./src/helpers/functions/objectToString.ts","webpack:///./src/pages/CountryDetails/Details/Details.tsx","webpack:///./src/pages/CountryDetails/Details/LoadingBorder.tsx","webpack:///./src/components/CountryCard/CountryCard.module.scss?2ed1","webpack:///./src/pages/CountryDetails/CountryDetails.module.scss?79f6"],"sourcesContent":["import React, { FC } from \"react\"\r\n\r\nimport capitalizeFirstLetter from \"../../../helpers/functions/capitalizeFirstLetter\"\r\nimport styles from \"../CountryCard.module.scss\"\r\nimport ICountryFeature from \"./ICountryFeature\"\r\n\r\nconst CountryFeature: FC<ICountryFeature> = ({ feature, ...props }) => {\r\n    return (\r\n        <span style={{ display: \"block\" }}>\r\n            <span className={styles.attribute}>\r\n                {capitalizeFirstLetter(feature)}:\r\n            </span>\r\n\r\n            <span> {props.children || \"None\"}</span>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default CountryFeature\r\n","export default function capitalizeFirstLetter(str: string): string {\r\n    return str[0].toUpperCase() + str.slice(1)\r\n}\r\n","export default function separateNumber(number: number): string {\r\n    //81770900 ==> 81,770,900\r\n    //206135893 ==> 206,135,893\r\n\r\n    //44700000 ==> 44,700,000\r\n    //28875 ==> 28,875\r\n\r\n    return splitNumberByRanks(number).join(\",\")\r\n\r\n    function splitNumberByRanks(n: number): string[] {\r\n        const numPieces: string[] = []\r\n        for (let i = 10 ** 3; n / i >= 1; n = (n / i) | 0) {\r\n            const numPiece = (n % i).toString()\r\n            numPieces.unshift(numPiece + \"0\".repeat(3 - numPiece.length))\r\n        }\r\n        numPieces.unshift(n.toString())\r\n\r\n        return numPieces\r\n    }\r\n}\r\n","function strToUrl(str: string): string {\r\n    return str.split(/\\s/).join(\"-\")\r\n}\r\n\r\nexport default strToUrl\r\n","function camelCaseToNormal(camelCaseStr: string): string {\r\n    return camelCaseStr.replace(/([a-z])([A-Z])/g, \"$1 $2\")\r\n}\r\n\r\nexport default camelCaseToNormal\r\n","function constructCountryDetailsUrl(countryNameFirstWord?: string): string {\r\n    return `https://restcountries.com/v2/name/${countryNameFirstWord}?fields=name,capital,region,population,flag,borders,topLevelDomain,nativeName,subregion,currencies,languages`\r\n}\r\n\r\nexport default constructCountryDetailsUrl\r\n","function getNthWord(str: string, wordIndex = 0): string | undefined {\r\n    return str.split(/(\\s)|(-)/).at(wordIndex)\r\n}\r\n\r\nexport default getNthWord\r\n","import objectToString from \"../../../helpers/functions/objectToString\"\r\nimport separateNumber from \"../../../helpers/functions/separateNumber\"\r\nimport ICountryDetails from \"../ICountryDetails\"\r\nimport ICookedDetails from \"./ICookedCountries\"\r\n\r\nfunction cookCountryDetails({\r\n    name,\r\n    topLevelDomain,\r\n    capital,\r\n    subregion,\r\n    region,\r\n    population,\r\n    borders,\r\n    nativeName,\r\n    currencies,\r\n    languages,\r\n    flag,\r\n}: ICountryDetails): Readonly<ICookedDetails> {\r\n    return Object.freeze({\r\n        name,\r\n        topLevelDomain: objectToString(topLevelDomain),\r\n        capital,\r\n        subregion,\r\n        region,\r\n        population: separateNumber(population),\r\n        borders,\r\n        nativeName,\r\n        currencies: currencies.map((currency) => currency.name).join(\", \"),\r\n        languages: languages.map((language) => language.name).join(\", \"),\r\n        flag,\r\n    })\r\n}\r\n\r\nexport default cookCountryDetails\r\n","function objectToString(obj: Array<any> | Object) {\r\n    return obj instanceof Object ? Object.values(obj).join(\", \") : obj\r\n}\r\n\r\nexport default objectToString\r\n","import axios from \"axios\"\r\nimport React, { FC, Suspense, useEffect, useMemo, useState } from \"react\"\r\nimport { Params, useNavigate } from \"react-router\"\r\n\r\nimport CountryFeature from \"../../../components/CountryCard/CountryFeature/CountryFeature\"\r\nimport Loading from \"../../../components/UI/Loading/Loading\"\r\nimport camelCaseToNormal from \"../../../helpers/functions/camelCaseToNormal\"\r\nimport constructCountryDetailsUrl from \"../../../helpers/functions/constructCountryDetailsUrl\"\r\nimport getNthWord from \"../../../helpers/functions/getNthWord\"\r\nimport strToUrl from \"../../../helpers/functions/strToUrl\"\r\nimport cookCountryDetails from \"../CookCountries/cookCountryDetails\"\r\nimport ICookedDetails from \"../CookCountries/ICookedCountries\"\r\nimport styles from \"../CountryDetails.module.scss\"\r\nimport ICountryDetails from \"../ICountryDetails\"\r\nimport LoadingBorder from \"./LoadingBorder\"\r\n\r\n// import BorderCountry from \"./BorderCountry\"\r\nconst BorderCountry = React.lazy(() => import(\"./BorderCountry\"))\r\n\r\nconst Details: FC<Readonly<Params<string>>> = ({ params }) => {\r\n    const { name } = params\r\n\r\n    const [cookedCountryDetails, setCookedCountryDetails] =\r\n        useState<ICookedDetails>()\r\n\r\n    const isLoading = useMemo(() => {\r\n        return cookedCountryDetails === undefined\r\n    }, [cookedCountryDetails])\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        fetchDetails()\r\n        // return () => {\r\n        //     console.log(1)\r\n        //     clearTimeout(timeout.current)\r\n        // }\r\n    }, [params])\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            if (!cookedCountryDetails) {\r\n                alert(\r\n                    \"Oops! It seems like there aren't any details for that country\"\r\n                )\r\n                navigate(\"/\")\r\n            }\r\n        }, 3000)\r\n\r\n        return () => clearTimeout(timeout)\r\n    })\r\n\r\n    async function fetchDetails(): Promise<void> {\r\n        const url = constructCountryDetailsUrl(getNthWord(name as string))\r\n\r\n        const { data: details } = await axios.get<ICountryDetails[]>(url)\r\n\r\n        let currentDetails: ICountryDetails | undefined\r\n\r\n        currentDetails =\r\n            details.length > 1\r\n                ? details.find(\r\n                      (detail) => strToUrl(detail.name.toLowerCase()) === name\r\n                  )\r\n                : details[0]\r\n        setCookedCountryDetails(cookCountryDetails(currentDetails!))\r\n    }\r\n\r\n    return isLoading ? (\r\n        <Loading />\r\n    ) : (\r\n        <div\r\n            className={`d-flex flex-column flex-sm-row align-items-center ${styles[\"details\"]}`}>\r\n            <div className={styles[\"details__header\"]}>\r\n                <img\r\n                    src={cookedCountryDetails?.flag}\r\n                    alt=\"Country flag\"\r\n                    className={`shadow-lg ${styles[\"details__header__img\"]}`}\r\n                />\r\n            </div>\r\n            <div\r\n                className={`d-flex flex-column justify-content-between ${styles[\"details__body\"]}`}>\r\n                <header className={styles[\"details__body__header\"]}>\r\n                    {cookedCountryDetails?.name}\r\n                </header>\r\n                <article className={`${styles[\"details__body__content\"]}`}>\r\n                    {Object.keys(cookedCountryDetails as Object)\r\n                        .filter((i) => !i.match(/(flag)|(name)|(borders)/i))\r\n                        .sort((a, b) => {\r\n                            return (\r\n                                cookedCountryDetails[b]?.length + b.length <\r\n                                cookedCountryDetails[a]?.length + a.length\r\n                            )\r\n                        })\r\n                        .map((prop: string) => (\r\n                            <CountryFeature\r\n                                key={prop}\r\n                                feature={camelCaseToNormal(prop)}>\r\n                                {cookedCountryDetails[prop]}\r\n                            </CountryFeature>\r\n                        ))}\r\n                </article>\r\n                <footer\r\n                    className={`d-flex flex-wrap align-items-center gap-2\r\n                    ${styles[\"details__footer\"]}`}>\r\n                    <span className={`${styles[\"details__footer__title\"]}`}>\r\n                        Border Countries:&nbsp;\r\n                    </span>\r\n                    {cookedCountryDetails.borders?.map((border) => (\r\n                        <Suspense fallback={<LoadingBorder />}>\r\n                            <BorderCountry key={border} countryCode={border} />\r\n                        </Suspense>\r\n                    )) || \"None\"}\r\n                </footer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Details\r\n","import React from \"react\"\r\n\r\nimport styles from \"../CountryDetails.module.scss\"\r\n\r\nconst LoadingBorder = () => {\r\n    return (\r\n        <span\r\n            className={`shadow-sm ${styles[\"details__footer__item\"]} \r\n            ${styles[\"gradient\"]}`}>\r\n            Lorem ipsum\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default LoadingBorder\r\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"_mIESs6x4bmN8T_bV24N\",\"active\":\"x2UMtOkO5Z23cyJYWIhY\",\"img\":\"X6y3R94hsNQ6Sd9Jj75w\",\"header\":\"jKPa9VCwA1LTwiv_RAei\",\"attribute\":\"pZXbB86KrhhRNHmg5gCp\",\"value\":\"zl8IYhRRl09_JwgB7lg7\"};","// extracted by mini-css-extract-plugin\nexport default {\"details\":\"l1hkjxGozYpPDOquZTu5\",\"details__header\":\"uHWZx0_N68PlhyFyniTJ\",\"details__body\":\"J1AaLm9UupSYsBVQMKFe\",\"details__header__img\":\"fdC9kqtrew_OtAJhHy2E\",\"details__body__header\":\"ut1kaPqA25XpqnGpNx2C\",\"details__body__content\":\"Kilpl5U1iXXsRapH_o2I\",\"details__footer\":\"KMNecxmu210OftvbPF7z\",\"details__footer__title\":\"ea5ixzkMI1eTkMC92VBb\",\"details__footer__item\":\"IkDrnysIoUoJLT1gYhBV\",\"gradient\":\"bpil0zatx32ix2qOoL4O\",\"placeHolderShimmer\":\"YIGpzAVkefKduWEt2yxM\"};"],"names":["feature","props","style","display","className","styles","capitalizeFirstLetter","children","str","toUpperCase","slice","separateNumber","number","n","numPieces","i","numPiece","toString","unshift","repeat","length","splitNumberByRanks","join","split","countryNameFirstWord","wordIndex","at","obj","name","topLevelDomain","capital","subregion","region","population","borders","nativeName","currencies","languages","flag","Object","freeze","values","map","currency","language","BorderCountry","React","params","useState","cookedCountryDetails","setCookedCountryDetails","isLoading","useMemo","undefined","navigate","useNavigate","url","constructCountryDetailsUrl","getNthWord","axios","details","data","currentDetails","find","detail","strToUrl","toLowerCase","cookCountryDetails","useEffect","fetchDetails","timeout","setTimeout","alert","clearTimeout","Loading","src","alt","keys","filter","match","sort","a","b","prop","CountryFeature","key","camelCaseStr","replace","border","Suspense","fallback","LoadingBorder","countryCode"],"sourceRoot":""}